{"uid":"b7fb29c8d4997472","name":"test_login","fullName":"tests.swag_labs.login.test_login#test_login","historyId":"206c5bc6efab1c12231448dc331eacfb","time":{"start":1712503602128,"stop":1712503602128,"duration":0},"description":"\n    This test validates the login functionality\n    of the application.\n    ","descriptionHtml":"<pre><code>This test validates the login functionality\nof the application.\n</code></pre>\n","status":"broken","statusMessage":"KeyError: None","statusTrace":"is_local = 'False', app = None, browser_type = 'firefox'\n\n    @pytest.fixture(scope='session')\n    def app_config(is_local, app, browser_type):\n>       cfg = Config(is_local=is_local,\n                     app=app,\n                     browser_type=browser_type\n                     )\n\ntests/conftest.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.config.Config object at 0x7f9ba4c2a090>, is_local = 'False'\napp = None, browser_type = 'firefox'\n\n    def __init__(self, is_local, app, browser_type='chrome'):\n        with open(f'{ROOT_DIR}/config/config.json') as config_file:\n            config_data = json.load(config_file)\n    \n        self.is_local = True if is_local == \"true\" else False\n        self.env_config = config_data['env']['local' if self.is_local else 'remote']\n        self.base_url = \"local\" if self.is_local else config_data['env']['remote']['healenium_url']\n>       self.app_url = config_data['app_urls'][app]\nE       KeyError: None\n\ntests/config.py:14: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"app","time":{"start":1712503602129,"stop":1712503602129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"is_local","time":{"start":1712503602129,"stop":1712503602129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1712503602130,"stop":1712503602130,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app_config","time":{"start":1712503602130,"stop":1712503602130,"duration":0},"status":"broken","statusMessage":"KeyError: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 913, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-healenium-automation/python-healenium-automation/tests/conftest.py\", line 130, in app_config\n    cfg = Config(is_local=is_local,\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-healenium-automation/python-healenium-automation/tests/config.py\", line 14, in __init__\n    self.app_url = config_data['app_urls'][app]\n                   ~~~~~~~~~~~~~~~~~~~~~~~^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"swag_ui"},{"name":"tag","value":"swag_smoke"},{"name":"parentSuite","value":"tests.swag_labs.login"},{"name":"suite","value":"test_login"},{"name":"host","value":"fv-az768-866"},{"name":"thread","value":"3595-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.swag_labs.login.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["swag_ui","swag_smoke"]},"source":"b7fb29c8d4997472.json","parameterValues":[]}